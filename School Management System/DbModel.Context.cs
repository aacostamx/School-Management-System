//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace School_Management_System
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class studentDBEntities : DbContext
    {
        public studentDBEntities()
            : base("name=studentDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<StudentMasters> StudentMasters { get; set; }
    
        public virtual ObjectResult<spConStudents_Result> spConStudents(string stdName, string email)
        {
            var stdNameParameter = stdName != null ?
                new ObjectParameter("StdName", stdName) :
                new ObjectParameter("StdName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConStudents_Result>("spConStudents", stdNameParameter, emailParameter);
        }
    
        public virtual int spDelStudents(Nullable<int> stdID)
        {
            var stdIDParameter = stdID.HasValue ?
                new ObjectParameter("StdID", stdID) :
                new ObjectParameter("StdID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDelStudents", stdIDParameter);
        }
    
        public virtual ObjectResult<string> spInsStudents(string stdName, string email, string phone, string address)
        {
            var stdNameParameter = stdName != null ?
                new ObjectParameter("StdName", stdName) :
                new ObjectParameter("StdName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spInsStudents", stdNameParameter, emailParameter, phoneParameter, addressParameter);
        }
    
        public virtual ObjectResult<string> spUPDStudents(Nullable<int> stdID, string stdName, string email, string phone, string address)
        {
            var stdIDParameter = stdID.HasValue ?
                new ObjectParameter("StdID", stdID) :
                new ObjectParameter("StdID", typeof(int));
    
            var stdNameParameter = stdName != null ?
                new ObjectParameter("StdName", stdName) :
                new ObjectParameter("StdName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spUPDStudents", stdIDParameter, stdNameParameter, emailParameter, phoneParameter, addressParameter);
        }
    }
}
